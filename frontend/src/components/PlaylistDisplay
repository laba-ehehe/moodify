import React, { useState } from 'react';

const PlaylistDisplay = ({ playlist, mood, onSavePlaylist, onBack }) => {
  const [playlistName, setPlaylistName] = useState(`Moodify - ${mood} Vibes`);
  const [currentlyPlaying, setCurrentlyPlaying] = useState(null);

  const formatDuration = (ms) => {
    const minutes = Math.floor(ms / 60000);
    const seconds = ((ms % 60000) / 1000).toFixed(0);
    return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;
  };

  const playPreview = (trackId, previewUrl) => {
    if (!previewUrl) {
      alert('No preview available for this track');
      return;
    }

    if (currentlyPlaying && currentlyPlaying.trackId === trackId) {
      currentlyPlaying.audio.pause();
      setCurrentlyPlaying(null);
    } else {
      if (currentlyPlaying) {
        currentlyPlaying.audio.pause();
      }
      
      const audio = new Audio(previewUrl);
      audio.play();
      setCurrentlyPlaying({ trackId, audio });
      
      audio.addEventListener('ended', () => {
        setCurrentlyPlaying(null);
      });
    }
  };

  const handleSave = () => {
    onSavePlaylist(playlistName);
  };

  const getMoodEmoji = (mood) => {
    const moodEmojis = {
      happy: '😊',
      sad: '😢',
      energetic: '🔥',
      chill: '😌',
      romantic: '❤️',
      angry: '😡',
      focused: '🎯',
      party: '🎉'
    };
    return moodEmojis[mood] || '🎵';
  };

  return (
    <div className="playlist-display">
      <div className="playlist-header">
        <h2>{getMoodEmoji(mood)} Your {mood} Playlist</h2>
        <p className="track-count">{playlist.tracks.length} tracks generated</p>
      </div>

      <div className="playlist-actions">
        <input
          type="text"
          value={playlistName}
          onChange={(e) => setPlaylistName(e.target.value)}
          placeholder="Enter playlist name"
          className="playlist-name-input"
        />
        <button onClick={handleSave} className="save-btn">
          💾 Save to Spotify
        </button>
        <button onClick={onBack} className="back-btn">
          ← Generate New Playlist
        </button>
      </div>

      <div className="tracks-container">
        {playlist.tracks.map((track, index) => (
          <div key={track.id} className="track-item">
            <div className="track-number">{index + 1}</div>
            
            {track.albumImage && (
              <img 
                src={track.albumImage} 
                alt={track.album}
                className="album-art"
              />
            )}
            
            <div className="track-info">
              <div className="track-name">{track.name}</div>
              <div className="track-artist">{track.artists}</div>
              <div className="track-album">{track.album}</div>
            </div>
            
            <div className="track-duration">
              {formatDuration(track.duration)}
            </div>
            
            <div className="track-actions">
              {track.preview_url && (
                <button
                  onClick={() => playPreview(track.id, track.preview_url)}
                  className="preview-btn"
                  title="Play preview"
                >
                  {currentlyPlaying?.trackId === track.id ? '⏸️' : '▶️'}
                </button>
              )}
              <a
                href={track.external_url}
                target="_blank"
                rel="noopener noreferrer"
                className="spotify-link"
                title="Open in Spotify"
              >
                🔗
              </a>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};

export default PlaylistDisplay;